(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{376:function(s,t,e){"use strict";e.r(t);var a=e(42),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"开发规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开发规范"}},[s._v("#")]),s._v(" 开发规范")]),s._v(" "),e("h2",{attrs:{id:"代码平台"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码平台"}},[s._v("#")]),s._v(" 代码平台")]),s._v(" "),e("p",[e("del",[s._v("使用 https://git.lug.ustc.edu.cn/ 平台")])]),s._v(" "),e("p",[s._v("使用 GitHub 平台（"),e("a",{attrs:{href:"https://github.blog/2020-04-14-github-is-now-free-for-teams/",target:"_blank",rel:"noopener noreferrer"}},[s._v("GitHub is now free for teams - The GitHub Blog"),e("OutboundLink")],1),s._v("）")]),s._v(" "),e("h2",{attrs:{id:"license"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[s._v("#")]),s._v(" License")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://opensource.org/licenses/AGPL-3.0",target:"_blank",rel:"noopener noreferrer"}},[s._v("GNU AGPLv3"),e("OutboundLink")],1)]),s._v(" "),e("h2",{attrs:{id:"git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[s._v("#")]),s._v(" Git")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("No binary files.")])]),s._v(" "),e("li",[e("p",[s._v("Commit message: English, first letter capitalized, short (50 chars or less), no period.")])]),s._v(" "),e("li",[e("p",[s._v("No "),e("code",[s._v("git push --force")]),s._v(".")])]),s._v(" "),e("li",[e("p",[s._v("Always use LF instead of CRLF. (Tips for Windows users: "),e("code",[s._v("git config --global core.autocrlf false")]),s._v(", "),e("code",[s._v("git config --global core.eol lf")]),s._v(", see "),e("a",{attrs:{href:"https://stackoverflow.com/a/13154031/8418049",target:"_blank",rel:"noopener noreferrer"}},[s._v("Stack Overflow"),e("OutboundLink")],1),s._v(").")])]),s._v(" "),e("li",[e("p",[s._v("Workflow:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b xxx-feature\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Finish first part"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Finish second part"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout master\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Disable fast-forward, always create a new commit object")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge --no-ff xxx-feature\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If conflicts occur, resolve them, then run `git {add|rm}` on conflicts file(s)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("add"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("rm"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# With all conflicts resovled, run")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Resolved merge conflict by ..."')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For more details, see https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/resolving-a-merge-conflict-using-the-command-line")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d xxx-feature\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br")])])])]),s._v(" "),e("h2",{attrs:{id:"eslint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#eslint"}},[s._v("#")]),s._v(" ESLint")]),s._v(" "),e("ol",[e("li",[s._v("Style guide: Airbnb.")]),s._v(" "),e("li",[s._v("Use "),e("code",[s._v("...eslint-disable...")]),s._v(" as little as possible.")])]),s._v(" "),e("h2",{attrs:{id:"typescript"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typescript"}},[s._v("#")]),s._v(" TypeScript")]),s._v(" "),e("p",[s._v("Use TypeScript, but use object-based API in Vue 2.x instead of class-based API. See "),e("RouterLink",{attrs:{to:"/develop/discuss/typescript.html"}},[s._v("typescript.md")]),s._v(" for more details.")],1),s._v(" "),e("h2",{attrs:{id:"ui-ux"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ui-ux"}},[s._v("#")]),s._v(" UI & UX")]),s._v(" "),e("p",[e("del",[s._v("模仿 hackerrank.com")])]),s._v(" "),e("h2",{attrs:{id:"评分机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#评分机制"}},[s._v("#")]),s._v(" 评分机制")]),s._v(" "),e("p",[e("em",[e("strong",[s._v("由于官方公布了评分机制，以下条目暂时失效。")])])]),s._v(" "),e("ol",[e("li",[s._v("不搞绝对平均；")]),s._v(" "),e("li",[s._v("根据功能/模块实现量、难度和完成度、commit 代码量等来确定；")]),s._v(" "),e("li",[s._v("大家每个人列出自己完成的功能/模块，之后每个人申报自己的期望得分，用某种机制使得可以匿名对某人申报的分数提出异议，如无异议，则这部分分数生效，占比 50%；另外 50%，对于组长，用某种机制让组员给组长匿名打分，取平均，对于其他组员，得分由组长确定（组长根据功能/模块难度、完成度、commit 代码量等来综合判断，若有异议，提出后共同商量；若组长不能清晰判断每个人的工作量、工作难度，则他应该采取尽量减少差距的保守策略。）；")]),s._v(" "),e("li",[s._v("组长得分 <= max(其他组员得分)，max(所有人得分) <= 1.5 * min(所有人得分)。以上约束如果不成立，“调分”。")])])])}),[],!1,null,null,null);t.default=n.exports}}]);